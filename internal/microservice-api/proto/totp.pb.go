// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.24.4
// source: totp.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ToTPObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ToTPObject) Reset() {
	*x = ToTPObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_totp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToTPObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToTPObject) ProtoMessage() {}

func (x *ToTPObject) ProtoReflect() protoreflect.Message {
	mi := &file_totp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToTPObject.ProtoReflect.Descriptor instead.
func (*ToTPObject) Descriptor() ([]byte, []int) {
	return file_totp_proto_rawDescGZIP(), []int{0}
}

func (x *ToTPObject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ToTPObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddToTPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Totp   string `protobuf:"bytes,2,opt,name=totp,proto3" json:"totp,omitempty"`
	Name   string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AddToTPRequest) Reset() {
	*x = AddToTPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_totp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToTPRequest) ProtoMessage() {}

func (x *AddToTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_totp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToTPRequest.ProtoReflect.Descriptor instead.
func (*AddToTPRequest) Descriptor() ([]byte, []int) {
	return file_totp_proto_rawDescGZIP(), []int{1}
}

func (x *AddToTPRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddToTPRequest) GetTotp() string {
	if x != nil {
		return x.Totp
	}
	return ""
}

func (x *AddToTPRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddToTPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AddToTPResponse) Reset() {
	*x = AddToTPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_totp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToTPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToTPResponse) ProtoMessage() {}

func (x *AddToTPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_totp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToTPResponse.ProtoReflect.Descriptor instead.
func (*AddToTPResponse) Descriptor() ([]byte, []int) {
	return file_totp_proto_rawDescGZIP(), []int{2}
}

func (x *AddToTPResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type FindAllToTPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *FindAllToTPRequest) Reset() {
	*x = FindAllToTPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_totp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllToTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllToTPRequest) ProtoMessage() {}

func (x *FindAllToTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_totp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllToTPRequest.ProtoReflect.Descriptor instead.
func (*FindAllToTPRequest) Descriptor() ([]byte, []int) {
	return file_totp_proto_rawDescGZIP(), []int{3}
}

func (x *FindAllToTPRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type FindAllToTPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*ToTPObject `protobuf:"bytes,2,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *FindAllToTPResponse) Reset() {
	*x = FindAllToTPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_totp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllToTPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllToTPResponse) ProtoMessage() {}

func (x *FindAllToTPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_totp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllToTPResponse.ProtoReflect.Descriptor instead.
func (*FindAllToTPResponse) Descriptor() ([]byte, []int) {
	return file_totp_proto_rawDescGZIP(), []int{4}
}

func (x *FindAllToTPResponse) GetResponse() []*ToTPObject {
	if x != nil {
		return x.Response
	}
	return nil
}

type RemoveToTPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Totp   string `protobuf:"bytes,2,opt,name=totp,proto3" json:"totp,omitempty"`
}

func (x *RemoveToTPRequest) Reset() {
	*x = RemoveToTPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_totp_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveToTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveToTPRequest) ProtoMessage() {}

func (x *RemoveToTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_totp_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveToTPRequest.ProtoReflect.Descriptor instead.
func (*RemoveToTPRequest) Descriptor() ([]byte, []int) {
	return file_totp_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveToTPRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RemoveToTPRequest) GetTotp() string {
	if x != nil {
		return x.Totp
	}
	return ""
}

type RemoveToTPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RemoveToTPResponse) Reset() {
	*x = RemoveToTPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_totp_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveToTPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveToTPResponse) ProtoMessage() {}

func (x *RemoveToTPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_totp_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveToTPResponse.ProtoReflect.Descriptor instead.
func (*RemoveToTPResponse) Descriptor() ([]byte, []int) {
	return file_totp_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveToTPResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

var File_totp_proto protoreflect.FileDescriptor

var file_totp_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x30, 0x0a, 0x0a, 0x54, 0x6f,
	0x54, 0x50, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x54, 0x6f, 0x54, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x74, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x74, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x29,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x54, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2c, 0x0a, 0x12, 0x46, 0x69, 0x6e,
	0x64, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x54, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x41,
	0x6c, 0x6c, 0x54, 0x6f, 0x54, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x6f, 0x54, 0x50, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f,
	0x54, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x6f, 0x74, 0x70, 0x22, 0x2c, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54,
	0x6f, 0x54, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x32, 0xfa, 0x01, 0x0a, 0x05, 0x54, 0x6f, 0x54, 0x50, 0x73, 0x12, 0x48, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x54, 0x50, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x54, 0x50, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x54, 0x50, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x41,
	0x6c, 0x6c, 0x54, 0x6f, 0x54, 0x50, 0x12, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x54,
	0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x54,
	0x6f, 0x54, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a,
	0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x54, 0x50, 0x12, 0x1f, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x54, 0x6f, 0x54, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x54, 0x6f, 0x54, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x75, 0x64, 0x6f, 0x72, 0x61, 0x31, 0x6e, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2d, 0x61,
	0x75, 0x74, 0x68, 0x2d, 0x62, 0x6f, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_totp_proto_rawDescOnce sync.Once
	file_totp_proto_rawDescData = file_totp_proto_rawDesc
)

func file_totp_proto_rawDescGZIP() []byte {
	file_totp_proto_rawDescOnce.Do(func() {
		file_totp_proto_rawDescData = protoimpl.X.CompressGZIP(file_totp_proto_rawDescData)
	})
	return file_totp_proto_rawDescData
}

var file_totp_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_totp_proto_goTypes = []interface{}{
	(*ToTPObject)(nil),          // 0: grpc_service.ToTPObject
	(*AddToTPRequest)(nil),      // 1: grpc_service.AddToTPRequest
	(*AddToTPResponse)(nil),     // 2: grpc_service.AddToTPResponse
	(*FindAllToTPRequest)(nil),  // 3: grpc_service.FindAllToTPRequest
	(*FindAllToTPResponse)(nil), // 4: grpc_service.FindAllToTPResponse
	(*RemoveToTPRequest)(nil),   // 5: grpc_service.RemoveToTPRequest
	(*RemoveToTPResponse)(nil),  // 6: grpc_service.RemoveToTPResponse
}
var file_totp_proto_depIdxs = []int32{
	0, // 0: grpc_service.FindAllToTPResponse.response:type_name -> grpc_service.ToTPObject
	1, // 1: grpc_service.ToTPs.AddToTP:input_type -> grpc_service.AddToTPRequest
	3, // 2: grpc_service.ToTPs.FindAllToTP:input_type -> grpc_service.FindAllToTPRequest
	5, // 3: grpc_service.ToTPs.RemoveToTP:input_type -> grpc_service.RemoveToTPRequest
	2, // 4: grpc_service.ToTPs.AddToTP:output_type -> grpc_service.AddToTPResponse
	4, // 5: grpc_service.ToTPs.FindAllToTP:output_type -> grpc_service.FindAllToTPResponse
	6, // 6: grpc_service.ToTPs.RemoveToTP:output_type -> grpc_service.RemoveToTPResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_totp_proto_init() }
func file_totp_proto_init() {
	if File_totp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_totp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToTPObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_totp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToTPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_totp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToTPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_totp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllToTPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_totp_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllToTPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_totp_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveToTPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_totp_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveToTPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_totp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_totp_proto_goTypes,
		DependencyIndexes: file_totp_proto_depIdxs,
		MessageInfos:      file_totp_proto_msgTypes,
	}.Build()
	File_totp_proto = out.File
	file_totp_proto_rawDesc = nil
	file_totp_proto_goTypes = nil
	file_totp_proto_depIdxs = nil
}
